@using BLL
@using Domain
@using MenuSystem
@model IndexModel
@{
    var game = Model.Game;
}
<style type="text/css">
    table {
        margin: 1em 0;
    }
    
    table, th, td {
        border: 1px solid black;
        border-collapse: collapse;
    }
    th, td {
        padding: 2px;
        width: 3em;
        height: 3em;
        display: table-cell;
        text-align: center;
        vertical-align: middle;
    }
    .green {
        background-color: green;
    }
    .red {
        background-color: red;
    }
    
</style>
<script>
</script>


<div class="row">
    <div class="col-md-auto">
        <table>
            <caption>My bombings on enemy board</caption>
            <thead>
            <tr>
                <th scope="col">#</th>
                @for (var i = 1; i <= game.Rules.BoardCols; i++)
                {
                    <th scope="col">@i</th>
                }
            </tr>
            </thead>
            <tbody>
            @for (var i = 1; i <= game.Rules.BoardRows; i++)
            {
                <tr>
                    @{ var letter = game.Converter.GetLetter(i);}
                    <th scope="row">@letter</th>
                    @for (var j = 1; j <= Model.Game.Rules.BoardCols; j++)
                    {
                        var className = "";
                        Tile enemyPlayerTile = game.TargetPlayer.Board.Tiles[i - 1][j - 1];
                        if (enemyPlayerTile.IsBombed && !enemyPlayerTile.IsEmpty()){className = "green";}
                        else if (enemyPlayerTile.IsBombed && enemyPlayerTile.IsEmpty()){className = "red";}

                        <td class="@className">@enemyPlayerTile</td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="col-md-auto">
        <table>
            <caption>My ships</caption>
            <thead>
            <tr>
                <th scope="col">#</th>
                @for (var i = 1; i <= game.Rules.BoardCols; i++)
                {
                    <th scope="col">@i</th>
                }
            </tr>
            </thead>
            <tbody>
            @for (var i = 1; i <= game.Rules.BoardRows; i++)
            {
                <tr>
                    @{ var letter = game.Converter.GetLetter(i);}
                    <th scope="row">@letter</th>
                    @for (var j = 1; j <= Model.Game.Rules.BoardCols; j++)
                    {
                        var className = "";
                        Tile currentPlayerTile = Model.Game.CurrentPlayer.Board.Tiles[i - 1][j - 1];
                        if (!currentPlayerTile.IsEmpty() && !currentPlayerTile.IsBombed){className = "green";}
                        else if (!currentPlayerTile.IsEmpty() && currentPlayerTile.IsBombed){className = "red";}

                        <td class="@className">@currentPlayerTile</td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>



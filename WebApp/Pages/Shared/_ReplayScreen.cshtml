@using BLL
@using Domain
@using MenuSystem
@model IndexModel
@{
    var game = Model.Game;
}
<head>
    <link rel="stylesheet" href="~/css/site.css" />
</head>

<div class="row">
    <div class="col-md-auto">
        <table>
            <caption>@game.Player1.Name ships</caption>
            <thead>
            <tr>
                <th scope="col">#</th>
                @for (var i = 1; i <= game.Rules.BoardCols; i++)
                {
                    <th scope="col">@i</th>
                }
            </tr>
            </thead>
            <tbody>
            @for (var i = 1; i <= game.Rules.BoardRows; i++)
            {
                <tr>
                    @{ var letter = game.Converter.GetLetter(i);}
                    <th scope="row">@letter</th>
                    @for (var j = 1; j <= Model.Game.Rules.BoardCols; j++)
                    {
                        var className = "";
                        Tile player1Tile = game.Player1.Board.Tiles[i - 1][j - 1];
                        if (!player1Tile.IsBombed && !player1Tile.IsEmpty()){className = "green";}
                        else if (player1Tile.IsBombed && !player1Tile.IsEmpty()){className = "red";}
                        else if (player1Tile.IsBombed) {className = "yellow";}

                        <td class="@className">@player1Tile</td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="col-md-auto">
        <table>
            <caption>@game.Player2.Name ships</caption>
            <thead>
            <tr>
                <th scope="col">#</th>
                @for (var i = 1; i <= game.Rules.BoardCols; i++)
                {
                    <th scope="col">@i</th>
                }
            </tr>
            </thead>
            <tbody>
            @for (var i = 1; i <= game.Rules.BoardRows; i++)
            {
                <tr>
                    @{ var letter = game.Converter.GetLetter(i);}
                    <th scope="row">@letter</th>
                    @for (var j = 1; j <= Model.Game.Rules.BoardCols; j++)
                    {
                        var className = "";
                        Tile player2Tile = game.Player2.Board.Tiles[i - 1][j - 1];
                        if (!player2Tile.IsBombed && !player2Tile.IsEmpty()){className = "green";}
                        else if (player2Tile.IsBombed && !player2Tile.IsEmpty()){className = "red";}
                        else if (player2Tile.IsBombed) {className = "yellow";}

                        <td class="@className">@player2Tile</td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col-md-auto">
        <form method="post" asp-page-handler="alt" class="form-group">
            <input type="hidden" name="command" value="@((int)Command.LoadReplay)"/>
            <input type="submit" value="Next move" class="btn btn-success"/>
        </form>
    </div>
    <div class="col-md-auto">
        <table>
            <tbody>
                <tr>
                    <td class="green"></td>
                    <td style="width: inherit">Alive ship tile</td>
                    <td class="red"></td>
                    <td style="width: inherit">Sunk ship tile</td>
                    <td class="yellow"></td>
                    <td style="width: inherit">Empty bombed tile</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>



@using BLL
@using Domain
@using MenuSystem
@model IndexModel
@{
    var game = Model.Game;
    Tile lastBombedTile = game.GameMoves[game.GameMoves.Count - 1].Tile;
}
<style type="text/css">
    table {
        margin: 1em 0;
    }
    
    table, th, td {
        border: 1px solid black;
        border-collapse: collapse;
    }
    th, td {
        padding: 2px;
        width: 3em;
        height: 3em;
        display: table-cell;
        text-align: center;
        vertical-align: middle;
    }
    .bombedHit {
        background-color: green;
    }
    .bombedMiss {
        background-color: red;
    }
    .lastBombed {
        background-color: yellow;
    }
    .lastBombedAndCurrentHit {
        background-color: greenyellow;
    }
    .lastBombedAndCurrentMiss {
        background-color: orange;
    }
    
</style>
<script>
</script>
<form method="post" asp-page-handler="alt" id="form">
    <input type="hidden" id="command" name="command" value=""/>
    <input type="hidden" id="value1" name="value1" value=""/>
    <input type="hidden" id="value2" name="value2" value=""/>
</form>

<div class="row">
    <div class="col-md-auto">
        <table>
            <thead>
            <tr>
                <th scope="col">#</th>
                @for (var i = 1; i <= game.Rules.BoardCols; i++)
                {
                    <th scope="col">@i</th>
                }
            </tr>
            </thead>
            <tbody>
            @for (var i = 1; i <= game.Rules.BoardRows; i++)
            {
                <tr>
                    @{ var letter = game.Converter.GetLetter(i);}
                    <th scope="row">@letter</th>
                    @for (var j = 1; j <= Model.Game.Rules.BoardCols; j++)
                    {
                        var className = "";
                        Tile currentPlayerTile = Model.Game.CurrentPlayer.Board.Tiles[i-1][j-1];
                        Tile enemyPlayerTile = game.TargetPlayer.Board.Tiles[i - 1][j - 1];
                        if (enemyPlayerTile.IsBombed && !enemyPlayerTile.IsEmpty())
                        {
                            className = "bombedHit";
                            if (lastBombedTile == currentPlayerTile){className = "lastBombedAndCurrentHit";}
                        }
                        else if (enemyPlayerTile.IsBombed && enemyPlayerTile.IsEmpty())
                        {
                            className = "bombedMiss";
                            if (lastBombedTile == currentPlayerTile){className = "lastBombedAndCurrentMiss";}
                        }
                        else if (lastBombedTile == currentPlayerTile)
                        {
                            className = "lastBombed";
                        }
                        
                        <td id="@currentPlayerTile" class="@className" onclick="bombTile('@currentPlayerTile')">@currentPlayerTile</td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="col-md-auto">
        <div class="row">
            <table>
                <tbody>
                <tr><td style="background-color: green"></td><td style="width: inherit">Successful hit on enemy board</td></tr>
                <tr><td style="background-color: red"></td><td style="width: inherit">Failed hit on enemy board</td></tr>
                <tr><td style="background-color: yellow"></td><td style="width: inherit">Last bombing by enemy</td></tr>
                <tr><td style="background-color: greenyellow"></td><td style="width: inherit">Successful hit on enemy and last bombing by enemy</td></tr>
                <tr><td style="background-color: orange"></td><td style="width: inherit">Failed hit on enemy and last bombing by enemy</td></tr>
                </tbody>
            </table>
        </div>
        <div class="row">
            <form method="post" asp-page-handler="alt" class="form-group">
                <input type="hidden" name="command" value="@((int)Command.SaveGame)"/>
                <input type="text" name="value1" placeholder="Save game's name"/>
                <input type="submit" value="Save Game" class="btn btn-success"/>
            </form>
        </div>
        
    </div>
</div>


<script>
    function bombTile(cell) {
        document.getElementById("command").value = @((int)Command.BombLocation);
        document.getElementById("value1").value = cell;
        document.getElementById("form").submit();
    }
</script>

